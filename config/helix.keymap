/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3
 #define ARROWS 4

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time. */

/ {
       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ----------------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |  1   |  2   |  3   |   4    |   5   |                                 |   6    |   7    |   8    |   9    |   0    |  DEL   |
 // |  TAB   |  Q   |  W   |  E   |   R    |   T   |                                 |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  ESC   |  A   |  S   |  D   |   F    |   G   |                                 |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |  Z   |  X   |  C   |   V    |   B   |  LBKT |               |  RBKT   |   N    |   M    |   ,    |   .    |   /    |   \    |
 // | ADJUST | ESC  | LCTRL| ALT  | LGUI   | LOWER | SPACE |               |  SPACE  | RAISE  |  RCMD  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
  &kp GRAVE  &kp N1  &kp N2    &kp N3   &kp N4    &kp N5                              &kp N6   &kp N7   &kp N8    &kp N9     &kp N0    &kp DEL
  &kp TAB    &kp Q   &kp W     &kp E    &kp R     &kp T                               &kp Y    &kp U    &kp I     &kp O      &kp P     &kp BSPC
  &kp ESC    &kp A   &kp S     &kp D    &kp F     &kp G                               &kp H    &kp J    &kp K     &kp L      &kp SEMI  &kp SQT
  &kp LSHFT  &kp Z   &kp X     &kp C    &kp V     &kp B    &kp LBKT         &kp RBKT  &kp N    &kp M    &kp COMMA &kp PERIOD &kp SLASH &kp BSLH
&mo ADJUST &kp ESC &kp LCTRL &kp LALT &kp LGUI &lt LOWER BSPC &kp SPACE  &kp SPACE &lt RAISE RET &kp RCMD &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                     >;
              };
              lower_layer {
 // -----------------------------------------------------------------------------------------------
 // |     |     |     |     |     |     |                    |     |     |     |      |     |     |
 // |  ~  |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (   |  )  | DEL |
 // |     |  |  |  -  |  =  |  _  |  +  |                    | LEFT| DOWN|  UP | RIGHT|  \  |     |
 // |     |     |     |     |     |     |  (  |        |  )  |     |PG_DN|PG_UP| HOME | END |     |
 // |     |     |     |     |     |     |     |        |     |     |     |     |      |     |PSCRN|
                     bindings = <
   &trans    &trans   &trans    &trans    &trans    &trans                           &trans    &trans    &trans    &trans    &trans   &trans
   &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                        &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR &kp DEL
   &trans  &mt LSHIFT PIPE  &mt LALT MINUS  &mt LCTRL EQUAL  &kp UNDER &kp PLUS      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp BSLH &trans
   &trans    &trans   &trans    &trans    &trans    &trans    &kp LPAR      &kp RPAR &trans    &kp PG_DN &kp PG_UP &kp HOME  &kp END  &trans
   &trans    &trans   &trans    &trans    &trans    &trans    &trans        &trans   &trans    &trans     &trans   &trans    &trans   &kp PSCRN
                     >;
              };
              raise_layer {
 // -----------------------------------------------------------------------------------------------------------------------------
 // |     |  F1  |  F2  |  F3  |  F4  |  F5  |                                    |  F6  |  F7  |  F8   |  f9   |  F10  |  F11  |
 // |  `  |      |   7  |   8  |   9  |      |                                    |      |  7   |   8   |   9   |       |  F12  |
 // |     |  LS  |   4  |   5  |   6  |   0  |                                    |   0  |  4   |   5   |   6   |  RS   |       |
 // |     |      |   1  |   2  |   3  |      |   {   |                    |   }   |      |  1   |   2   |   3   |       |       |
 // |     |      |      |      |      |      |       |                    |       |      |      |       |       |       |       |
                     bindings = <
   &trans  &kp F1    &kp F2   &kp F3 &kp F4  &kp F5                       &kp F6  &kp F7  &kp F8     &kp F9       &kp F10   &kp F11
   &kp GRAVE &trans  &kp N7   &kp N8 &kp N9  &trans                       &trans  &kp N7  &kp N8     &kp N9       &trans    &kp F12
   &trans  &kp LSHFT &mt LALT N4 &mt LCTRL N5 &kp N6 &kp N0               &kp N0  &kp N4 &mt RCTRL N5 &mt RALT N6 &kp RSHFT &trans
   &trans  &trans    &kp N1   &kp N2 &kp N3  &trans  &kp LBRC    &kp RBRC &trans  &kp N1  &kp N2     &kp N3       &trans    &trans
   &trans  &trans    &trans   &trans &trans  &trans  &trans        &trans &trans  &trans  &trans     &trans       &trans    &trans
                     >;
              };
              adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |    `     |    !     |    @     |    #     |    $     |    %     |                                |    ^     |    &     |    *     |    (     |    )     |  EP_OFF |
// |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ |  EP_TOG |
// |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |  RGB OFF|
// |  BT PRV  |          |          |          |          |          |   VOL-   |          |   VOL+   |   NEXT   |  PLAY    |          |          |          |  RGB TOG|
// |          |          |          |          |          |          |          |          |          |          |          |          |          |          | soft_off|
                     bindings = <
&kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_OFF
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &ext_power EP_TOG
&bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &rgb_ug RGB_OFF
&bt BT_PRV &trans       &trans       &trans       &trans       &trans  &kp C_VOL_DN     &kp C_VOL_UP &kp C_NEXT      &kp C_PP        &trans          &trans          &trans          &rgb_ug RGB_TOG
&trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans          &trans          &trans          &trans          &trans          &soft_off
                     >;
              };
       };

       arrows_layer {
           status = "reserved";
       };

/* kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
    }; */
};
